  		// imm7     rs2     rs1     fun3  imm5
001120a3               0000000 0  0001   0001  0 010  0000 1010 0011=001120a3
00112123               0000000 0  0001   0001  0 010  0001 0010 0011=001120a3
001121a3               0000000 0  0001   0001  0 010  0001 1010 0011=001120a3
00112223               0000000 0  0001   0001  0 010  0010 0010 0011=001120a3
001122a3               0000000 0  0001   0001  0 010  0010 1010 0011=001120a3

ram（rs1 + 1） = rs2
rs1 = 00100
rs2 = 00001
rs2不变 地址变

                              // imm12           rs1     fun3   rd
00112303               000000000001 00010   010  00110 000 0011
00212303 
00312303 
00412303 
00512303 

rd = ram（rs1 + 1）
imm变 地址变 rs1不变 rd 不变
00112303 
00212303 
00312303 
00412303 
00512303 

rtype rd, rs1,rs2
数据冒险测试用例
addi x1,  x1, imm
add x19, x0, x1
sub  x2, x19, x3
let imm = 12'bff1
code:

imm   rs1   fun3 rd op 
000000000001 00001 000 00001 0010011
imm   rs1   fun3 rd op 
ff1   00001 000   093
fun7           rs2         rs1      fun3   rd          op 
0000000  00001   00000    000   10011 0110011
fun7           rs2         rs1      fun3   rd          op 
0100000  10011   00011    000   00010 0110011

final:
ff108093
00100993
41318133

数据冒险测试用例2
addi x1,  x1, imm
sub x2,x1,x3
and x12,x2,x5
or x13,x6,x2
add x14,x2,x2
sd x15,100(x2)


fun7           rs2         rs1      fun3   rd          op 
0100000  00011    00001   000   00010 0110011
fun7           rs2         rs1      fun3   rd          op 
0000000  00101   00010    111  01100  0110011
fun7           rs2         rs1      fun3   rd          op 
0000000  00010    00110   110  01101  0110011
fun7           rs2         rs1      fun3   rd          op 
0000000  00010    00010   000  01110  0110011
imm7         rs2         rs1      fun3   imm5         op 
0000011  01111    00010   010   00100     0100011

100 = 64 + 32 + 4

ff108093
40308133
00517633
002366b3
00210e33
06f12223





控制冒险测试用例
静态预测

ff108093



